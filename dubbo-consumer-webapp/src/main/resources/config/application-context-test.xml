<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

   
    <!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@hostname:port:sid" />
        <property name="username" value="username" />
        <property name="password" value="password" />
    </bean>
    JNDI Data Source
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>JNDI_TEST_DB</value>
        </property>
    </bean> -->
    
    
    
    <!-- 引入jdbc配置文件 -->
    <context:property-placeholder location="classpath:config/jdbc.properties"/>
    
     <!--创建jdbc数据源 -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">  
        <property name="driverClassName" value="${driverClassName}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
    </bean>  
  
  
    <!-- 创建SqlSessionFactory，同时指定数据源 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- <property name="mapperLocations">
            <list>
                <value>classpath:com/nicchagil/mybatis3spring3intg/mapper/sqlxml/*_mapper.xml</value>
                <value>classpath:com/nicchagil/mybatis3spring3intg/bean/resultmapxml/*_resultmap.xml</value>
            </list>
        </property>
        <property name="typeAliasesPackage" value="com.nicchagil.mybatis3spring3intg.bean" /> -->
    </bean>  
      
    <!-- 可通过注解控制事务 -->  
   <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean> 
  
    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.geloin.spring.mapper" /> 
         <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> --> 
    </bean>  
    
    
    <!-- <bean id="SpringContextUtil" class="com.nicchagil.util.SpringContextUtil"/> -->
    
    <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->  
     <mvc:annotation-driven />  
     <!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->  
     <context:component-scan base-package="com.mvc.rest" />  
     <!-- <context:component-scan base-package="com.nicchagil.mybatis3spring3intg" /> -->
     <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->  
     <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/view/" p:suffix=".jsp" />   -->

     <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
     <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >  
        <property name="prefix" value="/"></property>  
        <property name="suffix" value=".jsp"></property>  
     </bean>   -->

	<!-- <import resource="config/aop-test.xml"/> -->
	<import resource="config/aop-annotation-test.xml"/>

</beans>